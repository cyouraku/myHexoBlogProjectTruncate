<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- 注册job for test start -->
	<bean id="jobRegistry" class="org.springframework.batch.core.configuration.support.MapJobRegistry"></bean>
	<!-- 注册job for test end -->

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    	<property name="dataSource" ref="dataSource"></property>
    </bean>

    <bean id="jobRepository" class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
    	<property name="dataSource" ref="dataSource"></property>
    	<property name="transactionManager" ref="transactionManager"></property>
    </bean>

    <bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
    	<property name="jobRepository" ref="jobRepository"></property>
    </bean>

	<batch:job id="myJob" restartable="true">
		<batch:step id="myStep" allow-start-if-complete="true">
			<batch:tasklet ref="myTasklet">
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<!-- add job for myJob4Seckill  -->
	<batch:job id="myJob4Seckill" restartable="true">
		<batch:step id="myStep4Seckill" allow-start-if-complete="true">
			<batch:tasklet ref="myTasklet4Seckill">
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<!-- add job for myJob4RemoteSql  -->
	<batch:job id="myJob4RemoteSql" restartable="true">
		<batch:step id="myStep4RemoteSql" allow-start-if-complete="true">
			<batch:tasklet ref="myTasklet4RemoteSql">
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<bean id="myTasklet" class="com.lzj.springbatch.tasklet.MyTasklet">
		<property name="userDao" ref="userDao"></property>
	</bean>

	<!-- add bean for myJob4Seckill  -->
	<bean id="myTasklet4Seckill" class="com.lzj.springbatch.tasklet.MyTaskletForSeckill">
		<property name="seckillMapper" ref="seckillMapper"></property>
	</bean>

	<bean id="myTasklet4RemoteSql" class="com.lzj.springbatch.tasklet.MyTaskletForRemoteSql">
		<property name="menuChannelLinkMapper" ref="menuChannelLinkMapper"></property>
	</bean>

	<!-- add bean for  myJob4RemoteSql2 -->
	<batch:job id="myJob4RemoteSql2">
        <batch:step id="myStep4RemoteSql2">
            <batch:tasklet transaction-manager="transactionManager">
                <batch:chunk reader="remoteSqlReader" processor="remoteSqlProcessor"
                    writer="remoteSqlWriter" chunk-completion-policy="" commit-interval="1">
                </batch:chunk>
            </batch:tasklet>
        </batch:step>
    </batch:job>

    <!-- READERの定義 -->
    <bean id="remoteSqlReader" scope="step" class="com.lzj.springbatch.tasklet.RemoteSqlReader"/>
    <!-- PROCESSORの定義 -->
    <bean id="remoteSqlProcessor" class="com.lzj.springbatch.tasklet.RemoteSqlProcessor" />
    <!-- WRITERの定義 -->
    <bean id="remoteSqlWriter" class="com.lzj.springbatch.tasklet.RemoteSqlWriter" />

</beans>
